plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.endyary'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springdoc:springdoc-openapi-ui:1.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test'
    runtimeOnly 'com.h2database:h2:1.4.200'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

task extractBootJar(type: Copy, dependsOn: bootJar) {
    def zipFile = file("${buildDir}/libs/${rootProject.name}-${version}.jar")
    def outputDir = file("${buildDir}/layers")

    from zipTree(zipFile)
    into outputDir
}

task dockerBuild(dependsOn: tasks.findByName("extractBootJar")) {
    doLast {
        exec {
            commandLine "sh", "-c", "(docker rm ${rootProject.name} || true) " +
                    "&& (docker rmi ${rootProject.name} || true)" +
                    "&& docker build -t ${rootProject.name} ."
        }
    }
}

